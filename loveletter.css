/**
 *------
 * BGA framework: © Gregory Isabelli <gisabelli@boardgamearena.com> & Emmanuel Colin <ecolin@boardgamearena.com>
 * loveletter implementation : © <Your name here> <Your email address here>
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 *
 * loveletter.css
 *
 * loveletter stylesheet
 *
 */

/*
    This is the CSS stylesheet of your game User Interface.
    
    Styles defined on this file will be applied to the HTML elements you define in your
    HTML template (loveletter_loveletter.tpl), and to HTML elements you create dynamically
    (in loveletter.js).
    
    Usually, you are using CSS to:
    
    1°) define the overall layout of your game
        (ex: place the board on the top left, place player's hand beside, place the deck on the right, ...).

    2°) create your CSS-sprites:
        All images of your games should be gathered into a small number of image files. Then, using
        background-image and background-position CSS properties, you create HTML blocks that can 
        display these images correctly (see example below).
    
    3°) ... anything else:
        It is really easy to add and remove CSS classes dynamically from your Javascript with
        dojo.addClass and dojo.removeClass. It is also easy to check if an element has a class
        (dojo.hasClass) or to get all elements with a specific class (dojo.query). This is why,
        very often, using CSS classes for the logic of your user interface allow you to do complex
        thing easily.
        
        
     Note: on the production platform, this file will be compressed and comments will be removed.
           Consequently, don't hesitate to put as many comments as necessary.
*/

@import url(../../../css/csslayer.css); /* Note: you must not use any @import directive other than this one */

/********* You can start writing your CSS below this line: **********/

@import url(../../../css/csslayer.css);

:root {
  --display-card-width: 33vw;
  --display-card-height: calc(var(--display-card-width) * 1.366);
  --card-width: 410px;
  --card-height: 560px;
  --deck-scale: 0.4;
  --hand-scale: 0.4;
  
  --sprite-cols: 6;
  --sprite-rows: 2;
  --badge-grid-cols: 4;
  --badge-grid-rows: 6;
  --badge-width: 36px; 
  --badge-height: 36px;
  --badge-gap: 0px;
  --badge-sprite-height: 127px;
  --badge-sprite-width: 127px;
}


html, body {
    height: 100%;
    margin: 0;
    padding: 0;
}

#lvt-background {
    background-image: url(img/background-no-borders.jpg);
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    position: fixed;
    z-index: -1;
}

#lvt-play-area {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  position: relative;
  width: 100%;
  box-sizing: border-box;
}

#lvt-play-area-grid {
  display: grid;
  max-width: 100%;
  max-height: 100%;
  overflow: visible;
  grid-template-areas:
    "top-left    top    top-right"
    "left        center right";
  grid-template-columns: 1fr auto 1fr;
  grid-template-rows: auto 1fr auto;
  gap: 10px;
  position: relative;
  align-items: center;
  justify-items: center;
}

.lvt-player-area.top-left     { grid-area: top-left; }
.lvt-player-area.top          { grid-area: top; }
.lvt-player-area.top-right    { grid-area: top-right; }
.lvt-player-area.left         { grid-area: left; }
.lvt-player-area.right        { grid-area: right; }

.lvt-player-area-bottom {
  min-height: 100px;
  min-width: 100px;
  background-color: yellow;
}

#lvt-center-area {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  grid-area: center;
}

#lvt-deck-area {
  margin: 16px;
  min-width: calc(var(--card-width) * var(--hand-scale));
  min-height: calc(var(--card-height) * var(--hand-scale));
  max-width: calc(var(--card-width) * var(--hand-scale));
  max-height: calc(var(--card-height) * var(--hand-scale));
}

#lvt-badges-area {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  padding: 10px;
  background: #fff8;
  border-radius: 12px;
  box-shadow: 0 2px 8px #0002;
  min-width: calc(var(--card-width) * var(--hand-scale));
  min-height: calc(var(--card-height) * var(--hand-scale));
  max-width: calc(var(--card-width) * var(--hand-scale));
  max-height: calc(var(--card-height) * var(--hand-scale));
}

.lvt-badge-grid {
  display: grid;
  position: absolute;
  grid-auto-flow: row;
  align-content: space-around;
  justify-content: space-around;
  grid-template-columns: repeat(var(--badge-grid-cols), var(--badge-width));
  grid-auto-rows: var(--badge-height);
  gap: var(--badge-gap);
  min-width: calc(var(--card-width) * var(--hand-scale));
  min-height: calc(var(--card-height) * var(--hand-scale));
  max-width: calc(var(--card-width) * var(--hand-scale));
  max-height: calc(var(--card-height) * var(--hand-scale));
}

.lvt-card-badge.played {
  opacity: 0.3;
}

.deck {
    border-radius: 12px;
}

.lvt-card-container {
  position: relative;
}

.lvt-player-table .lvt-card-container {
  width: calc(var(--display-card-width) * var(--hand-scale));
  height: calc(var(--display-card-height) * var(--hand-scale));
  position: relative;
}

.deck .lvt-card-container {
  width: calc(var(--card-width) * var(--deck-scale));
  height: calc(var(--card-height) * var(--deck-scale));
}

#lvt-badges-area .lvt-card-container {
  width: calc(var(--card-width) * var(--deck-scale));
  height: calc(var(--card-height) * var(--deck-scale));
}

.lvt-card {
  background-image: url('img/cards.jpg');
  border-radius: 12%;
  box-shadow: 5px 5px 5px 0px rgba(0,0,0,0.4);
}

.lvt-card.fade-out {
  opacity: 0;
  transition: opacity 3s;
  pointer-events: none;
}

.lvt-player-table.highlight {
  box-shadow: 0 0 16px 4px #ffd700, 0 0 0 4px #fff8 inset;
  border-radius: 16px;
  background: linear-gradient(90deg, #fffbe6 0%, #fffde6 100%);
  transition: box-shadow 0.3s, background 0.3s;
}

.lvt-player-table .lvt-card {
  width: calc(var(--display-card-width) * var(--hand-scale));
  height: calc(var(--display-card-height) * var(--hand-scale));
  background-size: 600% 200%
}

.deck .lvt-card {
  width: calc(var(--card-width) * var(--deck-scale));
  height: calc(var(--card-height) * var(--deck-scale));
  background-size: 600% 200%
}

#lvt-badges-area .lvt-card {
  width: calc(var(--card-width) * var(--deck-scale));
  height: calc(var(--card-height) * var(--deck-scale));
  background-size: 600% 200%
}

.lvt-player-table {
    min-height: 300px;
    min-width: 300px;
    background: #fff8;
    border: 1px solid #333;
    border-radius: 8px;
    text-align: center;
    padding: 6px;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    cursor: pointer;
}

.lvt-player-table.selected {
  outline: 3px solid red; 
}

.lvt-player-table-name {
  margin: 5px 0;
}

.lvt-player-table-card {
    min-height: 50px;
}

.card.bga-cards_selected-card > .card-sides > .front {
  outline: 3px solid red; 
  /*box-shadow: 0 0 10px 2px #ffd70088;*/
}

.card.keep > .card-sides > .front {
  outline: 3px solid #ffd700;
  box-shadow: 0 0 12px 3px rgba(255, 215, 0, 0.6);
  border-radius: 8px;
  z-index: 5;
  position: relative;
  transition: all 0.2s ease-in-out;
}

.guardchoiceicon {
    width: var(--badge-width);
    height: var(--badge-height);
    display: inline-block;
    background-image: url('img/cardnumbers.png');
}
.guardchoicename {
    font-weight: bold;
    position: relative;
    top: -17px;
    left: 10px;
    display: inline-block;
}

.out-of-the-round {
    background-color: grey;
}

/************************************************************
** BGA-CARDS CSS
************************************************************/

body > .card {
  position: absolute;
  left: -9999px;
  top: -9999px;
}

.card {
  flex-shrink: 0;
}
.card[data-side=back] .card-sides {
  transform: rotateY(180deg);
}
.card .card-sides {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  transform-style: preserve-3d;
  transition: transform 0.5s;
}
.card .card-sides .card-side {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  transform-style: preserve-3d;
  -webkit-backface-visibility: hidden; /* Safari */
  backface-visibility: hidden;
  transform-origin: center center;
  box-shadow: 1px 1px 2px 1px rgba(0, 0, 0, 0.5);
}
.card .card-sides .card-side.front > * {
  pointer-events: none;
  user-select: none;
}
.card .card-sides .card-side.back {
  transform: rotateY(180deg);
}
.card .card-sides .card-side.back > * {
  pointer-events: none;
  user-select: none;
}

.card-stock .card.bga-cards_selectable-card:not(.bga-cards_disabled-card) {
  cursor: pointer;
}
.card-stock .card.bga-cards_disabled-card {
  cursor: not-allowed;
  filter: contrast(0.6);
}

.card-stock.line-stock {
  display: flex;
  gap: var(--gap);
  flex-wrap: var(--wrap);
  flex-direction: var(--direction);
}
.card-stock.line-stock[data-center=true] {
  justify-content: center;
}

.card-stock.slot-stock {
  display: flex;
  gap: var(--gap);
  flex-wrap: var(--wrap);
  flex-direction: var(--direction);
}
.card-stock.slot-stock[data-center=true] {
  justify-content: center;
}

.card-stock.scrollable-stock {
  display: flex;
  gap: var(--button-gap);
}
.card-stock.scrollable-stock[data-scrollbar-visible=false] {
  -ms-overflow-style: none;
  scrollbar-width: none;
}
.card-stock.scrollable-stock[data-scrollbar-visible=false]::-webkit-scrollbar {
  display: none;
}
.card-stock.scrollable-stock .scrollable-stock-inner {
  display: flex;
  flex-wrap: nowrap;
  overflow-x: auto;
  gap: var(--gap);
}
.card-stock.scrollable-stock .scrollable-stock-inner[data-center=true] {
  justify-content: center;
}

.card-stock.hand-stock {
  display: flex;
  justify-content: center;
}
.card-stock.hand-stock .card {
  transform: translateY(calc(var(--card-shift) * var(--hand-stock-middle-index-abs))) rotate(calc(var(--hand-stock-middle-index) * var(--card-inclination)));
}
.card-stock.hand-stock .card:not(:first-child) {
  margin-left: calc(-1 * var(--card-overlap));
}

.card-stock.manual-position-stock {
  position: relative;
}
.card-stock.manual-position-stock .card {
  position: absolute;
}

.card-stock.void-stock {
  position: relative;
}
.card-stock.void-stock .card {
  position: absolute;
}

.card-stock.deck {
  position: relative;
}
.card-stock.deck > .card {
  position: absolute;
  top: calc(var(--thickness) * var(--xShadowShift) * -1);
  left: calc(var(--thickness) * var(--yShadowShift) * -1);
}
.card-stock.deck > .card:first-child {
  box-shadow: calc(var(--thickness) * var(--xShadowShift)) calc(var(--thickness) * var(--yShadowShift)) 0px 0px #111, calc(var(--thickness) * var(--xShadowShift)) calc(var(--thickness) * var(--yShadowShift)) 2px 1px rgba(0, 0, 0, 0.5);
}
.card-stock.deck[data-empty=true] > .card {
  visibility: hidden;
}
.card-stock.deck[data-empty=true] .bga-cards_deck-counter.hide-when-empty {
  display: none;
}

.bga-cards_deck-counter {
  --bga-cards-deck-counter-size: 20px;
  position: absolute;
  z-index: 2;
  width: var(--bga-cards-deck-counter-size);
  height: var(--bga-cards-deck-counter-size);
  left: calc(var(--bga-cards-deck-left) - var(--bga-cards-deck-counter-size) / 2);
  top: calc(var(--bga-cards-deck-top) - var(--bga-cards-deck-counter-size) / 2);
  display: flex;
  justify-content: center;
  align-items: center;
  user-select: none;
  pointer-events: none;
}
.bga-cards_deck-counter.round {
  color: black;
  background: white;
  border-radius: 50%;
  box-shadow: 0 0 2px 1px black;
  font-size: 14px;
}
.bga-cards_deck-counter.text-shadow {
  color: white;
  text-shadow: 0 0 1px black, 0 0 2px black, 0 0 3px black, 0 0 4px black;
  font-size: 20px;
}
.bga-cards_deck-counter.hidden {
  display: none;
}

.card-stock.all-visible-deck {
  position: absolute;
  --tile-count: 1;
  width: calc(var(--width) + (var(--tile-count) - 1) * var(--horizontal-shift));
  height: calc(var(--height) + (var(--tile-count) - 1) * var(--vertical-shift));
  transition: width 0.5s ease-in-out, height 0.5s ease-in-out, background-color 0.5s ease-in-out, box-shadow 0.5s ease-in-out;
}
.card-stock.all-visible-deck > .card {
  position: absolute;
  margin: 0;
  transition: left 0.5s ease-in-out, top 0.5s ease-in-out;
  top: calc(var(--vertical-shift) * var(--order));
  left: calc(var(--horizontal-shift) * var(--order));
}
.card-stock.all-visible-deck.vertical:hover, .card-stock.all-visible-deck.vertical:active, .card-stock.all-visible-deck.vertical.opened {
  height: calc((var(--height) + var(--vertical-shift)) * var(--tile-count) - var(--vertical-shift));
  z-index: 1;
}
.card-stock.all-visible-deck.vertical:hover > .card, .card-stock.all-visible-deck.vertical:active > .card, .card-stock.all-visible-deck.vertical.opened > .card {
  top: calc((var(--height) + var(--vertical-shift)) * var(--order));
}
.card-stock.all-visible-deck.horizontal:hover, .card-stock.all-visible-deck.horizontal:active, .card-stock.all-visible-deck.horizontal.opened {
  width: calc((var(--width) + var(--horizontal-shift)) * var(--tile-count) - var(--horizontal-shift));
  z-index: 1;
}
.card-stock.all-visible-deck.horizontal:hover > .card, .card-stock.all-visible-deck.horizontal:active > .card, .card-stock.all-visible-deck.horizontal.opened > .card {
  left: calc((var(--width) + var(--horizontal-shift)) * var(--order));
}
.card-stock.all-visible-deck .bga-cards_deck-counter {
  transition: left 0.5s ease-in-out, top 0.5s ease-in-out;
}
.card-stock.all-visible-deck[data-empty=true] > .card {
  visibility: hidden;
}
.card-stock.all-visible-deck[data-empty=true] .bga-cards_deck-counter.hide-when-empty {
  display: none;
}

/***** bubbles ********/

.lvt-discussion-bubble {
  position:absolute;
  padding:5px;
  padding-left: 15px;
  padding-right: 15px;
  color:#000;
  background:white; /* default background for browsers without gradient support */
  /* css3 */
   
  -webkit-border-radius:10px;
  -moz-border-radius:10px;
  border-radius:10px;
  z-index: 100;
  font-weight: normal;
  display: none;
}
.lvt-discussion-bubble:after {
  content:"";
  position:absolute;
  border-width:15px 15px 0; /* vary these values to change the angle of the vertex */
  border-style:solid;
  border-color:#ffffff transparent;
  /* reduce the damage in FF3.0 */
  display:block;
  
  width:0;
}