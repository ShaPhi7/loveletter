/**
 *------
 * BGA framework: © Gregory Isabelli <gisabelli@boardgamearena.com> & Emmanuel Colin <ecolin@boardgamearena.com>
 * loveletter implementation : © <Your name here> <Your email address here>
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 *
 * loveletter.css
 *
 * loveletter stylesheet
 *
 */

/*
    This is the CSS stylesheet of your game User Interface.
    
    Styles defined on this file will be applied to the HTML elements you define in your
    HTML template (loveletter_loveletter.tpl), and to HTML elements you create dynamically
    (in loveletter.js).
    
    Usually, you are using CSS to:
    
    1°) define the overall layout of your game
        (ex: place the board on the top left, place player's hand beside, place the deck on the right, ...).

    2°) create your CSS-sprites:
        All images of your games should be gathered into a small number of image files. Then, using
        background-image and background-position CSS properties, you create HTML blocks that can 
        display these images correctly (see example below).
    
    3°) ... anything else:
        It is really easy to add and remove CSS classes dynamically from your Javascript with
        dojo.addClass and dojo.removeClass. It is also easy to check if an element has a class
        (dojo.hasClass) or to get all elements with a specific class (dojo.query). This is why,
        very often, using CSS classes for the logic of your user interface allow you to do complex
        thing easily.
        
        
     Note: on the production platform, this file will be compressed and comments will be removed.
           Consequently, don't hesitate to put as many comments as necessary.
*/

@import url(../../../css/csslayer.css); /* Note: you must not use any @import directive other than this one */

/********* You can start writing your CSS below this line: **********/

@import url(../../../css/csslayer.css);

:root {
  --card-width: 410px;
  --card-height: 560px;
  --card-scale: 0.4;
  --sprite-cols: 6;
  --sprite-rows: 2;

  /* Scaled total sprite size */
  --sprite-width: calc(var(--card-width) * var(--sprite-cols) * var(--card-scale));
  --sprite-height: calc(var(--card-height) * var(--sprite-rows) * var(--card-scale));
}


html, body {
    height: 100%;
    margin: 0;
    padding: 0;
}

#lvt-background {
    background-image: url(img/background.jpg);
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    position: fixed;
    z-index: -1;
}

#lvt-play-area {
    position: relative;
    width: 100%;
    height: 100vh;
    overflow: hidden;
}

#lvt-table {
    position: relative;
    width: 100%;
    height: 100%;
}

#lvt-table-center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 1;
}

#lvt-deck {
  width: calc(var(--card-width) * var(--card-scale));
  height: calc(var(--card-height) * var(--card-scale));
  background-image: url('img/cards.jpg');
  background-size: var(--sprite-width) var(--sprite-height);
  background-position: 
  calc(-4 * var(--card-width) * var(--card-scale)) 
  calc(-1 * var(--card-height) * var(--card-scale));
  background-repeat: no-repeat;
  border-radius: 12px;
}


#lvt-playertables {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
}

.lvt-playertable {
    position: absolute;
    width: 240px;
    height: 120px;
    background: #fff8;
    border: 1px solid #333;
    border-radius: 8px;
    text-align: center;
    padding: 6px;
    font-weight: bold;
    z-index: 2;
    transform: translate(-50%, -50%);
}

.lvt-card-back {
  width: calc(var(--card-width) * var(--card-scale));
  height: calc(var(--card-height) * var(--card-scale));
  background-image: url('img/cards.jpg');
  background-size: var(--sprite-width) var(--sprite-height);
  background-position: 
  calc(-4 * var(--card-width) * var(--card-scale)) 
  calc(-1 * var(--card-height) * var(--card-scale));
  background-repeat: no-repeat;
  border-radius: 12px;
}

